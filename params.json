{
  "name": "sgRSEA",
  "tagline": "Enrichment Analysis of CRISPR/Cas9 Knockout Screen Data",
  "body": "#sgRSEA: Enrichment Analysis of CRISPR/Cas9 Knockout Screen Data\r\n\r\nsgRSEA is a tool to identify significant genes in GeCKO experiments.\r\n\r\nVersion:alpha\r\n\r\nLast modified: 10/10/2016\r\n\r\nAuthors: Beibei Chen (beibei.chen@utsouthwestern.edu), Jungsik Noh (junsik.noh@utsouthwestern.edu)\r\n\r\nMaintainer: Beibei Chen\r\n\r\n[Download the latest stable version of sgRSEA] (http://)\r\n[Download the R package of sgRSEA] (https://cran.r-project.org/web/packages/sgRSEA/index.html)\r\n\r\nFor detailed [manual](wiki page)\r\n\r\n##Prerequisites\r\n* Python 2.7\r\n* [Pandas](http://pandas.pydata.org/)\r\n* [Numpy] (http://www.numpy.org/)\r\n* stattest \r\n\r\n##Installation \r\n\r\n###Option 1: from source code\r\n1 Download sgRSEA\r\n```bash\r\ngit clone\r\ncd sgRSEA\r\n```\r\n\r\n2 Install required packages\r\n```bash\r\npip install -r requirements.txt\r\n```\r\n\r\n3 Install sgRSEA\r\n```python\r\npython setup.py install\r\n```\r\n\r\n##Usage\r\n\r\nsgRSEA can be run on specific steps as well as fastq-to-result using a single command.\r\n\r\n```\r\nsgRSEA: identify significant genes in CRISPR-Cas9 experiment\r\n\r\npositional arguments:\r\n  {count,reformat,run,stattest,normalization}\r\n    run                 Run the whole program from fastq to result\r\n    count               Get sgRNA count matrix\r\n    normalization       Normalize sgRNA count matrix\r\n    reformat            Reformat count table for sgRSEA stat test\r\n    stattest            Identify significant genes from normalized count table\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n\r\nFor command line options of each command, type sgrsea COMMAND -h\r\n```\r\n\r\n###Get count matrix from fastq files\r\n**sgRSEA count** can be used on single fastq file and multiple fastq files. When using multiple fastq files, a [design file](http://) containing design information should be provided.\r\n\r\n```bash\r\nusage: sgrsea count [-h] [-i INFILE | -d DESIGNFILE] -o OUTFILE [-l LIBFILE]\r\n                    [--sgstart SGSTART] [--sgstop SGSTOP] [--trim3 TRIM3]\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -i INFILE, --input INFILE\r\n                        input fastq\r\n  -d DESIGNFILE, --design DESIGNFILE\r\n                        design file\r\n  -o OUTFILE, --output OUTFILE\r\n                        output\r\n  -l LIBFILE, --library LIBFILE\r\n                        Gene locus in bed format\r\n  --sgstart SGSTART     The first nucleotide sgRNA starts. 1-index\r\n  --sgstop SGSTOP       The last nucleotide sgRNA starts. 1-index\r\n  --trim3 TRIM3         The trimming pattern from 3'. This pattern and the\r\n                        following sequence will be removed\r\n```\r\n\r\n###Normalize sgRNA count matrix\r\n\r\n```bash\r\nusage: sgrsea normalization [-h] -i INFILE\r\n                            [--normalize-method {total,median,upperquantile}]\r\n                            -o OUTFILE [--split-lib]\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -i INFILE, --input INFILE\r\n                        input count file matrix\r\n  --normalize-method {total,median,upperquantile}\r\n                        design file\r\n  -o OUTFILE, --output OUTFILE\r\n                        output\r\n  --split-lib           Lib A and B are sequenced separately\r\n```\r\n\r\n###Convert data matrix to sgRSEA input\r\n\r\nsgRSEA takes a data matrix with 4 columns: sgRNA, Gene, treatment, control.\r\n**sgreas reformat** to collapse replicates and make multiple input files for *stattest* if there are more than 1 comparison needed to be done accroding to the design file.\r\n\r\n```bash\r\nusage: sgrsea reformat [-h] -i INFILE -o OUTFILE [-d DESIGNFILE] -t TREAT -c\r\n                       CTRL [--collapse-replicates {auto,stack,mean}]\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -i INFILE, --input INFILE\r\n                        input BAM file\r\n  -o OUTFILE, --output OUTFILE\r\n                        output\r\n  -d DESIGNFILE, --design DESIGNFILE\r\n                        output\r\n  -t TREAT, --treatment TREAT\r\n                        columns/name of treatment samples\r\n  -c CTRL, --control CTRL\r\n                        columns/name of control samples\r\n  --collapse-replicates {auto,stack,mean}\r\n                        Way to collapse replicates\r\n```\r\n\r\n###Find significant genes for each comparison\r\n\r\n```bash\r\nusage: sgrsea stattest [-h] -i INFILE -o OUTFILE --multiplier MULTIPLIER\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -i INFILE, --input INFILE\r\n                        sgRSEA input file, 4 columns\r\n  -o OUTFILE, --output OUTFILE\r\n                        output file name\r\n  --multiplier MULTIPLIER\r\n                        Multiplier to generate background\r\n```\r\n\r\n##Examples\r\n\r\nRun the suite:\r\n```python\r\nsgrsea run -d ../test/fulldata/design.txt -o ../test/fulldata/testfull --multiplier 100 -t BR,DI -c UN,UN --split-lib\r\n```\r\n\r\n\r\n##Input\r\n\r\n###[Fastq file](https://en.wikipedia.org/wiki/FASTQ_format)\r\n\r\n###Library file\r\nLibrary file should have 3 columns in the following order, with the column names exactly the same: \r\n* Gene \r\n* sgRNA\r\n* Sequence\r\n\r\nExample:\r\n```\r\nGene  sgRNA             Sequence\r\nA1BG  HGLibA_00001  GTCGCTGAGCTCCGATTCGA\r\nA1BG  HGLibA_00002  ACCTGTAGTTGCCGGCGTGC\r\nA1BG  HGLibA_00003  CGTCAGCGTCACATTGGCCA\r\nA1CF  HGLibA_00004  CGCGCACTGGTCCAGCGCAC\r\nA1CF  HGLibA_00005  CCAAGCTATATCCTGTGCGC\r\nA1CF  HGLibA_00006  AAGTTGCTTGATTGCATTCT\r\nA2M   HGLibA_00007  CGCTTCTTAAATTCTTGGGT\r\nA2M   HGLibA_00008  TCACAGCGAAGGCGACACAG\r\nA2M   HGLibA_00009  CAAACTCCTTCATCCAAGTC\r\nA2ML1 HGLibA_00010  AAATTTCCCCTCCGTTCAGA\r\n```\r\n\r\n###Design file\r\nWhen you are using the suite for your experiment, you need to prepare a design file.(For individual functionalities, you may not have to.)\r\nDesign file has to include all the essential columns (Please use exactly the same column names, order does not matter):\r\n\r\n* **filepath**: The absolute path to the fastq file\r\n* **lib**: The absolute path of the library file. If there is no sublib, this column should has the same value across all rows\r\n* **sublib**: The sample for sublib. Eg: GeCKO_libA, GeCKO_libB. Use this when you sequence sublib separately\r\n* **sample**: Name of each sample. Note that don't include sublib information here \r\n* **group**: This will be used as output prefix for each sample. Please DON'T use \" \", \"-\" in the content\r\n* **sgstart**: The first nucleotide of sgRNA. 1-index\r\n* **sgstop**: The last nucleotide of sgRNA. 1-index\r\n* **trim3**: Sequence pattern of the 3' adaptor. Usually 5~7nt. If provided, the program will look for perfect match of this pattern in fastq sequence. The last match and all nucleotides after that will be trimmed. If you don't need this, put \"NA\" in the design file\r\n\r\nExample\r\n```\r\nfilepath          sample lib                                 sublib  group     sgstart  sgstop  trim3\r\nUA1_R1_001.fastq  SS_U1 Human_GeCKOv2_Library_A_3.uniq.txt  LibA    CONTROL   34       53      False\r\nUB1_R1_001.fastq  SS_U1 Human_GeCKOv2_Library_B_1.uniq.txt  LibB    CONTROL   36       55      False\r\nHA1_R1_001.fastq  SS_H1 Human_GeCKOv2_Library_A_3.uniq.txt  LibA    TREATMENT 42       61      False\r\nHB1_R1_001.fastq  SS_H1 Human_GeCKOv2_Library_B_1.uniq.txt  LibB    TREATMENT 35       54      False\r\n```\r\n\r\nIn the above example, there are 1 treatment and 1 control. Library A and B are sequenced separately. For each sample, sgRNA positions are different. There is not 3 prime adaptor sequence provides so *trim3* columns are filled with \"False\".\r\n\r\n\r\n##Output\r\n\r\n###Count matrix (w/wo normalization)\r\nThe count matrix will contain basic sgRNA, gene, sequence, sublib information with counts of each sample as an extra column.\r\nThe normalization matrix will contain sgRNA, gene information, along with normalized counts of each sample as an extra column.\r\n\r\n###sgRSEA formatted matrix\r\nThis matrix has four columns, sgRNA, Gene, treatment, control.\r\nIf there are multiple comparisons, multiple files will be generated.\r\n\r\n###sgRSEA stattest output file \r\nFor each comparison, there will be a result file. Columns are:\r\n* Gene: name of the gene\r\n* sgcount: number of sgRNA per gene\r\n* NScore: normalized maxmean score\r\n* pos_p: p value for positive selection\r\n* pos_fdr: FDR for positive selection\r\n* pos_rank: gene rank for positive selection\r\n* neg_p: p value for negative selection\r\n* neg_fdr: FDR for negative selection\r\n* neg_rank: gene rank for negative selection\r\n\r\n\r\n\r\n##License\r\nSee the LICENSE file for license rights and limitations (MIT).\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nhttps://cran.r-project.org/web/packages/sgRSEA/index.html",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}